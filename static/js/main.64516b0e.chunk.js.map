{"version":3,"sources":["assets/images/me_2.jpg","components/header.jsx","components/home.jsx","components/activity.jsx","components/contacts.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","isOpen","state","react_default","a","createElement","Navbar","color","dark","expand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","to","id","React","Component","home","src","photoUrl","alt","href","activity","contacts","footer","App","BrowserRouter","header_Header","Route","path","exact","component","Home","Activity","Contacts","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64516b0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me_2.7760648c.jpg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem\n} from 'reactstrap';\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/\" id=\"home\">Home <span className=\"sr-only\">(current)</span></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/activity/\" id=\"activity\">Activity</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/contacts/\" id=\"contacts\">Contacts</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport photoUrl from '../assets/images/me_2.jpg';\n\nexport default () => (\n  <div className=\"container about tab py-4\">\n    <div className=\"row\">\n      <div className=\"col-lg-9\">\n        <h2 className=\"pb-2\">About me</h2>\n        <img src={photoUrl} className=\"img-fluid img-thumbnail\" alt=\"me\" />\n        <p>My name is Azamat Abdullin. I&rsquo;m originally from Bol&rsquo;shaya Usmanova,\n        Russia, but I&rsquo;ve been residing in Roshchino\n        for quite some time now.</p>\n\n        <p>I&rsquo;m currently working as a technical support specialist.\n        Before that I worked as a programmer at the university.</p>\n\n        <p>In addition to programming, I&rsquo;m interested in cars, in particular,\n          the device engines and engine management systems.\n          I redid the engine management system in my car from carburetor to electronic.</p>\n\n        <p>I completed two training projects on <a href=\"https://ru.hexlet.io/u/usman\">hexlet.io</a>.\n          There I study the profession \"frontend programmer\". Now I&rsquo;m making\n          a <a href=\"https://github.com/UsmanAAV/game-2048-library-functional\">clone</a> of\n          the game 2048.</p>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className=\"container activity tab py-4\">\n    <div className=\"row\">\n      <div className=\"col-lg-9\">\n        <h2 className=\"pb-2\">Activity</h2>\n        <p>My projects in no particular order:</p>\n        <ul>\n          <li><a href=\"https://github.com/UsmanAAV/project-lvl1-s204\">brain-games</a>\n            &ndash; My first project on the Hexlet - a few simple CLI games</li>\n          <li><a href=\"https://github.com/UsmanAAV/project-lvl2-s225\">genDiff</a>\n            &ndash; My second project on the Hexlet - file diff CLI utility</li>\n          <li><a href=\"https://github.com/UsmanAAV/game-2048-library-functional\"> game-2048-library-functional</a>\n            &ndash;  A library for making 2048 game</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className=\"container contacts tab py-4\">\n    <div className=\"row\">\n      <div className=\"col-lg-9\">\n        <h2 className=\"pb-2\">Contacts</h2>\n        <p>I'm on  <a href=\"https://www.facebook.com/azamat.abdullin.98\">facebook</a></p>\n        <p>My <a href=\"https://github.com/UsmanAAV\">github</a></p>\n        <p>E-mail : <a href=\"mailto:usman.a.a.v@gmail.com\">Azamat Abdullin</a></p>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className=\"row\">\n    <div className=\"col\">\n      <div className=\"footer-copyright text-center py-3\">\n        <a href=\"https://github.com/UsmanAAV\">Azamat Abdullin</a>\n      </div>\n    </div>\n  </div>\n)\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Header from './components/header.jsx';\nimport Home from './components/home.jsx';\nimport Activity from './components/activity.jsx';\nimport Contacts from './components/contacts.jsx';\nimport Footer from './components/footer.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container bg-light\">\n          <header>\n            <Header />\n          </header>\n          <main>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/activity/\" exact component={Activity} />\n            <Route path=\"/contacts/\" exact component={Contacts} />\n            <Route component={() => <div className=\"dark\">{'Sorry, this page not found'}</div>} />\n          </main>\n          <footer className=\"page-footer font-small bg-dark\">\n            <Footer />\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}